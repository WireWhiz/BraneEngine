name: CMake

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "Main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  linux-build:
    # The CMake configure and build commands are platform-agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: sudo apt-get install libopengl-dev libxrandr-dev libxinerama-dev libxi-dev libxxf86vm-dev libglfw3-dev libssl-dev libasio-dev libglm-dev libgtest-dev
    
    - name: Download Submodules
      run: git submodule update --init

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_TESTS=ON

    - name: Build Tests
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --target tests

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}} --test-dir src/tests

      # Make sure all the main targets build
    - name: Build Editor
      run: cmake --build ${{github.workspace}}/build --config Debug --target BraneEditor

    - name: Build Client
      run: cmake --build ${{github.workspace}}/build --config Debug --target BraneSurfer

    - name: Build Asset Server
      run: cmake --build ${{github.workspace}}/build --config Debug --target AssetServer